// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/configs/{schema}/{name}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "configs"
                ],
                "summary": "Fetch configuration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Schema name",
                        "name": "schema",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Configuration name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Config data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/web.ConfigFetchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.ConfigResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.WebResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update configuration with given schema and name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "configs"
                ],
                "summary": "Update configuration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Schema name",
                        "name": "schema",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Configuration name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Config data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/web.ConfigUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.ConfigResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.WebResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create configuration with given schema and name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "configs"
                ],
                "summary": "Create a new configuration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Schema name",
                        "name": "schema",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Configuration name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Config data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/web.ConfigCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/web.ConfigResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.WebResponse"
                        }
                    }
                }
            }
        },
        "/configs/{schema}/{name}/rollback": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "configs"
                ],
                "summary": "Rollback configuration to previous version",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Schema name",
                        "name": "schema",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Configuration name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Config data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/web.ConfigRollbackRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.ConfigResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.WebResponse"
                        }
                    }
                }
            }
        },
        "/configs/{schema}/{name}/versions": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "configs"
                ],
                "summary": "List configuration versions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Schema name",
                        "name": "schema",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Configuration name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/web.ConfigResponses"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "web.ConfigCreateRequest": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "The configuration JSON object",
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "web.ConfigFetchRequest": {
            "type": "object",
            "properties": {
                "version": {
                    "type": "integer"
                }
            }
        },
        "web.ConfigResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "data": {
                    "description": "raw JSON",
                    "type": "object",
                    "additionalProperties": true
                },
                "name": {
                    "type": "string"
                },
                "schema": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "web.ConfigResponses": {
            "type": "object",
            "properties": {
                "configVersions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/web.ConfigResponse"
                    }
                },
                "name": {
                    "type": "string"
                },
                "schema": {
                    "type": "string"
                }
            }
        },
        "web.ConfigRollbackRequest": {
            "type": "object",
            "required": [
                "version"
            ],
            "properties": {
                "version": {
                    "type": "integer"
                }
            }
        },
        "web.ConfigUpdateRequest": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "web.WebResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "status": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:3000",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Configuration Management Service",
	Description:      "This is a service for managing configurations with versioning.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
