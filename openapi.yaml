openapi: 3.0.3
info:
  title: Configuration Management Service
  version: 1.0.0
servers:
  - url: http://localhost:8080
paths:
  /configs/{schema}/{name}:
    post:
      summary: Create a configuration (version = 1)
      parameters:
        - name: schema
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, type, data]
              properties:
                name:
                  type: string
                type:
                  type: string
                data:
                  type: object
            examples:
              payment:
                value:
                  name: payments
                  type: payment_config
                  data:
                    max_limit: 1000
                    enabled: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigResponse'
        '400':
          description: Validation error
    put:
      summary: Update configuration (creates new version)
      parameters:
        - name: schema
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [data]
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigResponse'
    get:
      summary: Fetch latest or specific version
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
        - in: query
          name: version
          required: false
          schema: 
            type: integer
      responses:
        '200':
          description: Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigResponse'
        '404':
          description: Not found
  /configs/{name}/versions:
    get:
      summary: List all versions
      parameters:
        - in: path
          name: name
          required: true
          schema: { type: string }
      responses:
        '200':
          description: versions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConfigVersion'
  /configs/{name}/rollback:
    post:
      summary: Rollback to a specific historical version (creates new version)
      parameters:
        - in: path
          name: name
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [version]
              properties:
                version:
                  type: integer
      responses:
        '200':
          description: Rolled back (new version created)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigResponse'

components:
  schemas:
    ConfigResponse:
      type: object
      properties:
        schema: { type: string }
        name: { type: string }
        version: { type: integer }
        data: { type: object }
        created_at: { type: string }
    ConfigResponses:
      type: object
      properties:
        schema: { type: string }
        name: { type: string }
        ConfigVersions:
          type: object
          properties:
            schema: { type: string }
            name: { type: string }
            version: { type: integer }
            data: { type: object }
            created_at: { type: string }
